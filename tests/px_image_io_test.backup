

TEST(image_io, ppm)
{
    const int w = 256;
    const int h = 250;
    const int cn = 3;
    px_image_t* image = px_create_image(h, w, cn);
    for (int i = 0; i < h; i++)
    {
        uint8_t* sp = image->data + i * image->stride;
        for (int j = 0; j < w; j++)
        {
            sp[0] = i;
            sp[1] = j;
            sp[2] = (i + j) / 2;
            sp += cn;
        }
    }

    const char* filename = "test.ppm";
    px_write_image(image, filename);

    px_image_t* new_image = px_read_image(filename);

    EXPECT_EQ(image->height, new_image->height);
    EXPECT_EQ(image->width, new_image->width);

    EXPECT_TRUE(px_image_almost_equal(image, new_image, 0));

    px_destroy_image(image);
    px_destroy_image(new_image);
}

TEST(image_io, pgm)
{
    const int w = 256;
    const int h = 250;
    const int cn = 1;
    px_image_t* image = px_create_image(h, w, cn);
    for (int i = 0; i < h; i++)
    {
        uint8_t* sp = image->data + i * image->stride;
        for (int j = 0; j < w; j++)
        {
            sp[0] = i;
            sp += cn;
        }
    }

    const char* filename = "test.pgm";
    px_write_image(image, filename);

    px_image_t* new_image = px_read_image(filename);

    EXPECT_EQ(image->height, new_image->height);
    EXPECT_EQ(image->width, new_image->width);

    EXPECT_TRUE(px_image_almost_equal(image, new_image, 0));

    px_destroy_image(image);
    px_destroy_image(new_image);
}
